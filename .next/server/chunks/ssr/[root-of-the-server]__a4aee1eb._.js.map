{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/src/app/blog/%5Bslug%5D/page.jsx"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport matter from 'gray-matter';\r\nimport { marked } from 'marked';\r\nimport Link from 'next/link';\r\n\r\n// Function to get all blog post slugs for static generation\r\nexport async function generateStaticParams() {\r\n  const blogDir = path.join(process.cwd(), 'src/app/blog/_content');\r\n  const files = fs.readdirSync(blogDir);\r\n  \r\n  return files\r\n    .filter(filename => filename.endsWith('.md'))\r\n    .map(filename => {\r\n      const filePath = path.join(blogDir, filename);\r\n      const fileContents = fs.readFileSync(filePath, 'utf8');\r\n      const { data } = matter(fileContents);\r\n      \r\n      return {\r\n        slug: data.slug || filename.replace('.md', ''),\r\n      };\r\n    });\r\n}\r\n\r\n// Function to generate metadata for each blog post\r\nexport async function generateMetadata({ params }) {\r\n  // Await the params object\r\n  const resolvedParams = await params;\r\n  const { slug } = resolvedParams;\r\n  \r\n  const post = getPostBySlug(slug);\r\n  \r\n  if (!post) {\r\n    return {\r\n      title: 'Post Not Found',\r\n      description: 'The requested blog post could not be found',\r\n    };\r\n  }\r\n  \r\n  return {\r\n    title: `${post.title} | My Blog`,\r\n    description: post.description,\r\n    openGraph: {\r\n      title: post.title,\r\n      description: post.description,\r\n      type: 'article',\r\n      publishedTime: post.date,\r\n      url: `/blog/${slug}`,\r\n    },\r\n  };\r\n}\r\n\r\n// Function to get blog post by slug\r\nfunction getPostBySlug(slug) {\r\n  const blogDir = path.join(process.cwd(), 'src/app/blog/_content');\r\n  const files = fs.readdirSync(blogDir);\r\n  \r\n  // First try to find a file with matching slug in frontmatter\r\n  let postFile = null;\r\n  \r\n  for (const filename of files) {\r\n    if (!filename.endsWith('.md')) continue;\r\n    \r\n    const filePath = path.join(blogDir, filename);\r\n    const fileContents = fs.readFileSync(filePath, 'utf8');\r\n    \r\n    try {\r\n      const { data } = matter(fileContents);\r\n      \r\n      if (data.slug === slug || filename.replace('.md', '') === slug) {\r\n        postFile = { path: filePath, contents: fileContents };\r\n        break;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error parsing frontmatter in ${filename}:`, error);\r\n      continue;\r\n    }\r\n  }\r\n  \r\n  if (!postFile) return null;\r\n  \r\n  try {\r\n    // Parse the post content\r\n    const { data, content } = matter(postFile.contents);\r\n    const htmlContent = marked(content);\r\n    \r\n    return {\r\n      slug,\r\n      title: data.title || 'Untitled Post',\r\n      date: data.date || new Date().toISOString(),\r\n      description: data.description || 'No description provided',\r\n      content: htmlContent,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error processing post content:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction formatDate(date) {\r\n  try {\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  } catch (e) {\r\n    return 'Invalid Date';\r\n  }\r\n}\r\n\r\nexport default async function BlogPost({ params }) {\r\n  // Await the params object\r\n  const resolvedParams = await params;\r\n  const { slug } = resolvedParams;\r\n  \r\n  const post = getPostBySlug(slug);\r\n  \r\n  if (!post) {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto px-4 py-12\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Post Not Found</h1>\r\n        <p>The blog post you are looking for does not exist.</p>\r\n        <Link \r\n          href=\"/blog\"\r\n          className=\"text-blue-600 hover:text-blue-800 mt-4 inline-block\"\r\n        >\r\n          ← Back to Blog\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"max-w-4xl mx-auto px-4 py-12\">\r\n      <div className=\"mb-8\">\r\n        <Link \r\n          href=\"/blog\"\r\n          className=\"text-blue-600 hover:text-blue-800 mb-6 inline-block\"\r\n        >\r\n          ← Back to Blog\r\n        </Link>\r\n        <h1 className=\"text-4xl font-bold mb-4\">{post.title}</h1>\r\n        <div className=\"text-gray-500 mb-6\">\r\n          {formatDate(post.date)}\r\n        </div>\r\n      </div>\r\n      \r\n      <article className=\"prose prose-lg max-w-none\">\r\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\r\n      </article>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}