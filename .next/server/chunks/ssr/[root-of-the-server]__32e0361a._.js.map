{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/src/app/blog/%5Bslug%5D/page.jsx"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport matter from 'gray-matter';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport Link from 'next/link';\r\nimport { notFound } from 'next/navigation';\r\n\r\n// Fetch static paths\r\nexport async function generateStaticParams() {\r\n  const blogDir = path.join(process.cwd(), 'src/app/blog/_content');\r\n  if (!fs.existsSync(blogDir)) return [];\r\n\r\n  const files = fs.readdirSync(blogDir);\r\n\r\n  return files\r\n    .filter(filename => filename.endsWith('.md'))\r\n    .map(filename => {\r\n      const raw = fs.readFileSync(path.join(blogDir, filename), 'utf8');\r\n      const { data } = matter(raw);\r\n      const slug = data.slug || filename.replace('.md', '');\r\n      return { slug };\r\n    });\r\n}\r\n\r\n// Metadata\r\nexport async function generateMetadata({ params }) {\r\n  const post = await getPostBySlug(params.slug);\r\n  if (!post) {\r\n    return {\r\n      title: 'Post Not Found',\r\n      description: 'Blog not found.',\r\n    };\r\n  }\r\n\r\n  return {\r\n    title: `${post.title} | My Blog`,\r\n    description: post.description,\r\n    openGraph: {\r\n      title: post.title,\r\n      description: post.description,\r\n      type: 'article',\r\n      publishedTime: post.date,\r\n      url: `/blog/${post.slug}`,\r\n    },\r\n  };\r\n}\r\n\r\n// Get single post\r\nasync function getPostBySlug(slug) {\r\n  const blogDir = path.join(process.cwd(), 'src/app/blog/_content');\r\n  if (!fs.existsSync(blogDir)) return null;\r\n\r\n  const files = fs.readdirSync(blogDir);\r\n\r\n  for (const filename of files) {\r\n    if (!filename.endsWith('.md')) continue;\r\n\r\n    const filePath = path.join(blogDir, filename);\r\n    const raw = fs.readFileSync(filePath, 'utf8');\r\n    const { data, content } = matter(raw);\r\n    const frontmatterSlug = data.slug || filename.replace('.md', '');\r\n\r\n    if (frontmatterSlug === slug) {\r\n      return {\r\n        slug,\r\n        title: data.title || 'Untitled',\r\n        date: data.date || new Date().toISOString(),\r\n        description: data.description || '',\r\n        author: data.author || 'Unknown Author',\r\n        tags: data.tags || [],\r\n        markdown: content,\r\n        image: data.image || null,\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// Format date\r\nfunction formatDate(date) {\r\n  try {\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  } catch {\r\n    return 'Invalid Date';\r\n  }\r\n}\r\n\r\n// Blog Post Page Component\r\nexport default async function BlogPost({ params }) {\r\n  const post = await getPostBySlug(params.slug);\r\n  if (!post) notFound();\r\n\r\n  return (\r\n    <div className=\"blog-post-container\">\r\n      <div className=\"blog-post-header\">\r\n        <Link href=\"/blog\" className=\"blog-back-link\">\r\n          ← Back to Blog\r\n        </Link>\r\n\r\n        <h1 className=\"blog-post-title\">{post.title}</h1>\r\n\r\n        <div className=\"blog-post-meta\">\r\n          <span>By {post.author}</span>\r\n          <span className=\"mx-2\">•</span>\r\n          <span>{formatDate(post.date)}</span>\r\n        </div>\r\n\r\n        {post.tags.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2 mb-6\">\r\n            {post.tags.map((tag, idx) => (\r\n              <span key={idx} className=\"blog-post-tag\">\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {post.image && (\r\n          <img\r\n            src={post.image}\r\n            alt={post.title}\r\n            className=\"blog-post-image\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <article className=\"blog-post-content\">\r\n        <ReactMarkdown \r\n          remarkPlugins={[remarkGfm]}\r\n          components={{\r\n            table: ({node, ...props}) => (\r\n              <div className=\"overflow-x-auto\">\r\n                <table {...props} />\r\n              </div>\r\n            ),\r\n            code: ({node, inline, className, children, ...props}) => {\r\n              if (inline) {\r\n                return <code className=\"blog-post-content code\" {...props}>{children}</code>;\r\n              }\r\n              return <pre className=\"blog-post-content pre\" {...props}>{children}</pre>;\r\n            }\r\n          }}\r\n        >\r\n          {post.markdown}\r\n        </ReactMarkdown>\r\n      </article>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}