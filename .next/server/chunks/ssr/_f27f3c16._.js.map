{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/src/app/blog/%5Bslug%5D/TableOfContents.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function TableOfContents({ headings, mobile = false }) {\r\n  const [activeId, setActiveId] = useState('');\r\n  const [isExpanded, setIsExpanded] = useState(!mobile);\r\n\r\n  useEffect(() => {\r\n    if (!headings || headings.length === 0) return;\r\n\r\n    // Add IDs to headings in the DOM\r\n    const addIdsToHeadings = () => {\r\n      headings.forEach(heading => {\r\n        // Look for heading elements with matching text content\r\n        const elements = document.querySelectorAll(`h${heading.level}`);\r\n        elements.forEach(element => {\r\n          if (element.textContent?.trim() === heading.text.trim() && !element.id) {\r\n            element.id = heading.id;\r\n            // Add smooth scroll offset for fixed header\r\n            element.style.scrollMarginTop = '120px';\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    // Wait for DOM to be ready, then add IDs\r\n    const timer = setTimeout(addIdsToHeadings, 100);\r\n\r\n    // Intersection Observer for active section tracking\r\n    const observerOptions = {\r\n      root: null,\r\n      rootMargin: '-100px 0px -66% 0px',\r\n      threshold: [0, 0.25, 0.5, 0.75, 1]\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      // Find the entry with the highest intersection ratio that's intersecting\r\n      let mostVisible = null;\r\n      let highestRatio = 0;\r\n\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && entry.intersectionRatio > highestRatio) {\r\n          mostVisible = entry;\r\n          highestRatio = entry.intersectionRatio;\r\n        }\r\n      });\r\n\r\n      if (mostVisible) {\r\n        setActiveId(mostVisible.target.id);\r\n      } else {\r\n        // Fallback: check which heading is closest to the top of the viewport\r\n        const headingElements = headings\r\n          .map(h => document.getElementById(h.id))\r\n          .filter(Boolean);\r\n        \r\n        let closestElement = null;\r\n        let smallestDistance = Infinity;\r\n\r\n        headingElements.forEach(element => {\r\n          const rect = element.getBoundingClientRect();\r\n          const distance = Math.abs(rect.top - 100); // 100px offset for header\r\n          \r\n          if (distance < smallestDistance && rect.top <= 200) {\r\n            smallestDistance = distance;\r\n            closestElement = element;\r\n          }\r\n        });\r\n\r\n        if (closestElement) {\r\n          setActiveId(closestElement.id);\r\n        }\r\n      }\r\n    }, observerOptions);\r\n\r\n    // Observe all headings\r\n    const observeHeadings = () => {\r\n      headings.forEach(heading => {\r\n        const element = document.getElementById(heading.id);\r\n        if (element) {\r\n          observer.observe(element);\r\n        }\r\n      });\r\n    };\r\n\r\n    // Start observing after a short delay to ensure DOM is ready\r\n    const observeTimer = setTimeout(observeHeadings, 200);\r\n\r\n    // Handle scroll events as backup\r\n    const handleScroll = () => {\r\n      if (window.scrollY < 100) {\r\n        setActiveId('');\r\n        return;\r\n      }\r\n\r\n      const headingElements = headings\r\n        .map(h => document.getElementById(h.id))\r\n        .filter(Boolean);\r\n\r\n      for (let i = headingElements.length - 1; i >= 0; i--) {\r\n        const element = headingElements[i];\r\n        const rect = element.getBoundingClientRect();\r\n        \r\n        if (rect.top <= 120) { // Account for fixed header\r\n          setActiveId(element.id);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearTimeout(observeTimer);\r\n      observer.disconnect();\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [headings]);\r\n\r\n  const scrollToHeading = (id) => {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n      const yOffset = -100; // Account for fixed header\r\n      const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n      \r\n      window.scrollTo({ \r\n        top: y, \r\n        behavior: 'smooth' \r\n      });\r\n      \r\n      // Update active state immediately for better UX\r\n      setActiveId(id);\r\n    }\r\n    \r\n    if (mobile) {\r\n      setIsExpanded(false);\r\n    }\r\n  };\r\n\r\n  if (!headings || headings.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const tocContent = (\r\n    <div className=\"space-y-1\">\r\n      {headings.map((heading, index) => {\r\n        const isActive = activeId === heading.id;\r\n        const levelIndent = Math.max(0, heading.level - 1) * 12; // 12px per level\r\n        \r\n        return (\r\n          <button\r\n            key={index}\r\n            onClick={() => scrollToHeading(heading.id)}\r\n            className={`\r\n              block w-full text-left px-3 py-2 rounded-lg text-sm transition-all duration-200 \r\n              hover:bg-gray-700/50 group relative\r\n              ${isActive\r\n                ? 'bg-gradient-to-r from-blue-600/20 to-purple-600/20 text-blue-400 border-l-2 border-blue-400'\r\n                : 'text-gray-400 hover:text-gray-200'\r\n              }\r\n            `}\r\n            style={{ paddingLeft: `${12 + levelIndent}px` }}\r\n          >\r\n            <span className=\"flex items-center\">\r\n              {heading.level > 2 && (\r\n                <span className=\"mr-2 text-gray-600 text-xs\">\r\n                  {'•'.repeat(Math.min(heading.level - 2, 3))}\r\n                </span>\r\n              )}\r\n              <span className={`\r\n                ${heading.level === 1 ? 'font-bold' :\r\n                  heading.level === 2 ? 'font-semibold' :\r\n                  'font-medium'\r\n                }\r\n              `}>\r\n                {heading.text}\r\n              </span>\r\n            </span>\r\n            \r\n            {/* Active indicator */}\r\n            {isActive && (\r\n              <div className=\"absolute left-0 top-1/2 transform -translate-y-1/2 w-1 h-6 bg-blue-400 rounded-r-full\"></div>\r\n            )}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  if (mobile) {\r\n    return (\r\n      <div className=\"bg-gray-800/30 backdrop-blur-sm rounded-2xl border border-gray-700/50 overflow-hidden\">\r\n        <button\r\n          onClick={() => setIsExpanded(!isExpanded)}\r\n          className=\"w-full flex items-center justify-between p-4 text-left hover:bg-gray-700/30 transition-colors\"\r\n        >\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"p-2 bg-blue-500/20 rounded-lg\">\r\n              <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-bold text-white\">Table of Contents</h3>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {headings.length} section{headings.length !== 1 ? 's' : ''}\r\n                {activeId && (\r\n                  <span className=\"ml-2 text-blue-400\">\r\n                    • {headings.find(h => h.id === activeId)?.text}\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <svg \r\n            className={`w-5 h-5 text-gray-400 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`} \r\n            fill=\"none\" \r\n            stroke=\"currentColor\" \r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </button>\r\n        \r\n        <div className={`overflow-hidden transition-all duration-300 ${isExpanded ? 'max-h-96' : 'max-h-0'}`}>\r\n          <div className=\"px-4 pb-4 border-t border-gray-700/50\">\r\n            <div className=\"pt-4\">\r\n              {tocContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Desktop version\r\n  return (\r\n    <div className=\"bg-gray-800/30 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50 shadow-xl sticky top-8\">\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"p-2 bg-blue-500/20 rounded-lg\">\r\n          <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\" />\r\n          </svg>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"font-bold text-white\">Table of Contents</h3>\r\n          <p className=\"text-sm text-gray-400\">\r\n            {headings.length} section{headings.length !== 1 ? 's' : ''}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      <nav className=\"max-h-96 overflow-y-auto scrollbar-thin scrollbar-track-gray-800 scrollbar-thumb-gray-600\">\r\n        {tocContent}\r\n      </nav>\r\n      \r\n      <div className=\"mt-6 pt-4 border-t border-gray-700/50\">\r\n        <div className=\"flex items-center text-xs text-gray-500\">\r\n          <div className=\"w-2 h-2 bg-blue-400 rounded-full mr-2 animate-pulse\"></div>\r\n          <span>\r\n            {activeId \r\n              ? `Reading: ${headings.find(h => h.id === activeId)?.text || 'Current section'}`\r\n              : 'Start reading'\r\n            }\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,QAAQC,QAAQC,GAAG,CAACC,kBAAkB,GACxC,AAAC,UAAOF,QAAQC,GAAG,CAACC,kBAAkB,IACtC;IAEJ,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGX,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}}]
}