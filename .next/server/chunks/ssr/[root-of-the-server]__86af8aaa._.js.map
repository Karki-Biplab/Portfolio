{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/src/app/blog/components/MainPage.jsx"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport matter from 'gray-matter';\r\nimport BlogPage from './components/MainPage';\r\n\r\nexport const metadata = {\r\n  title: 'Blog | My Next.js Site',\r\n  description: 'Read the latest articles and tutorials on web development, design, and technology',\r\n};\r\n\r\nfunction getReadingTime(content) {\r\n  const wordsPerMinute = 200;\r\n  const words = content.split(/\\s+/).length;\r\n  const minutes = Math.ceil(words / wordsPerMinute);\r\n  return `${minutes} min read`;\r\n}\r\n\r\nasync function getBlogPosts() {\r\n  const blogDir = path.join(process.cwd(), 'src/app/blog/_content');\r\n  \r\n  // Check if directory exists\r\n  if (!fs.existsSync(blogDir)) {\r\n    console.warn(`Blog directory not found: ${blogDir}`);\r\n    return [];\r\n  }\r\n\r\n  const files = fs.readdirSync(blogDir);\r\n  \r\n  const allPosts = files\r\n    .filter(filename => filename.endsWith('.md'))\r\n    .map(filename => {\r\n      const filePath = path.join(blogDir, filename);\r\n      const fileContent = fs.readFileSync(filePath, 'utf8');\r\n      \r\n      // Use gray-matter to parse the post metadata section\r\n      const { data, content } = matter(fileContent);\r\n      \r\n      return {\r\n        slug: data.slug || filename.replace('.md', ''),\r\n        title: data.title || 'Untitled Post',\r\n        date: data.date || new Date().toISOString(),\r\n        description: data.description || 'No description provided',\r\n        category: data.category || 'Uncategorized',\r\n        image: data.image || '/images/default-blog-cover.jpg',\r\n        author: data.author || { name: 'Anonymous', avatar: '/images/default-avatar.jpg' },\r\n        readingTime: data.readingTime || getReadingTime(content),\r\n      };\r\n    });\r\n\r\n  return allPosts;\r\n}\r\n\r\nexport default async function BlogPageWrapper() {\r\n  const allPosts = await getBlogPosts();\r\n  \r\n  return <BlogPage allPosts={allPosts} />;\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;;;;;;AAGO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEA,SAAS,eAAe,OAAO;IAC7B,MAAM,iBAAiB;IACvB,MAAM,QAAQ,QAAQ,KAAK,CAAC,OAAO,MAAM;IACzC,MAAM,UAAU,KAAK,IAAI,CAAC,QAAQ;IAClC,OAAO,GAAG,QAAQ,SAAS,CAAC;AAC9B;AAEA,eAAe;IACb,MAAM,UAAU,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAEzC,4BAA4B;IAC5B,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,UAAU;QAC3B,QAAQ,IAAI,CAAC,CAAC,0BAA0B,EAAE,SAAS;QACnD,OAAO,EAAE;IACX;IAEA,MAAM,QAAQ,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAE7B,MAAM,WAAW,MACd,MAAM,CAAC,CAAA,WAAY,SAAS,QAAQ,CAAC,QACrC,GAAG,CAAC,CAAA;QACH,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,SAAS;QACpC,MAAM,cAAc,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAE9C,qDAAqD;QACrD,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;QAEjC,OAAO;YACL,MAAM,KAAK,IAAI,IAAI,SAAS,OAAO,CAAC,OAAO;YAC3C,OAAO,KAAK,KAAK,IAAI;YACrB,MAAM,KAAK,IAAI,IAAI,IAAI,OAAO,WAAW;YACzC,aAAa,KAAK,WAAW,IAAI;YACjC,UAAU,KAAK,QAAQ,IAAI;YAC3B,OAAO,KAAK,KAAK,IAAI;YACrB,QAAQ,KAAK,MAAM,IAAI;gBAAE,MAAM;gBAAa,QAAQ;YAA6B;YACjF,aAAa,KAAK,WAAW,IAAI,eAAe;QAClD;IACF;IAEF,OAAO;AACT;AAEe,eAAe;IAC5B,MAAM,WAAW,MAAM;IAEvB,qBAAO,8OAAC;QAAS,UAAU;;;;;;AAC7B","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///D:/project/src/app/blog/page.jsx"],"sourcesContent":["import React from 'react'\r\nimport MainPage from './components/MainPage'\r\n\r\nconst page = () => {\r\n  return (\r\n    <div>\r\n      <MainPage />\r\n   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default page\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,OAAO;IACX,qBACE,8OAAC;kBACC,cAAA,8OAAC,6IAAA,CAAA,UAAQ;;;;;;;;;;AAIf;uCAEe","debugId":null}}]
}